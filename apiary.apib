FORMAT: 1A
HOST: https://iWine.apiblueprint.org/

# iWine API 

iWine API allows user to control "smart" decanter and to get it's status with any devices using this API. Errors from server are human readed and are used to be
shown on UI side
API provides few functions:
Authentication: with mobile number (by code)
Authorization: with mobile number (by code), including sign out.
Change tempreture: changes tempreture in decanter
Shaking decater: shakes decanter
Status: check the status of iWine


# Authentication [/api/signup]

## Sign Up [POST]

Creates new user:

*phone - mobile phone number in format of +Country_codeMobile operator codePhone, e.g. +79165910525.
*mock - 1 for mock, 0 for server request. mock always responses with 202

*access - has to be sent in headers in all further requests

*message - information message for UI
+ Request  (application/json)

        {
        "phone": "+79160000000",
        "mock": 0
        }
        
+ Response 202 (application/json)

        {
        "access": "450dSdsdk48578593003203"
        "message": "Please fill in code from SMS we sent"
        }
+ Response 400 (application/json)

         {
        "message": "Incorrect phone format. Please, try again"
        }
+ Response 422 (application/json)

         [{
        "message": "Phone is already used. Sign in or use another ones"
        }
+ Response 502 (application/json)

         [{
        "message": "Internal error has occured. Please, try again"
        }
## Sign Up resend [PUT]
Reseneds SMS code to the phone number by access token
Header "Authorization" has to be filled in with OAuth access (value of "access" field from signup response), e.g. Authorization: OAuth 450dSdsdk48578593003203:

*Code - code from SMS

*mock - 1 for mock, 0 for server request. Mock always responses with 202

*message - information message for UI
+ Request  (application/json) 

    + Headers
    
            Authorization: OAuth 450dSdsdk48578593003203
            
    + Body
    
            {
            "mock": 0
            }
            
+ Response 202 (application/json)

        {
        "message": "Phone code resent"
        }
+ Response 401 (application/json)

         {
        "message": "Not authorized"
        }
+ Response 400 (application/json)

         {
        "message": "Code is requested to earlier. Timeout to resend 00:59 sec"
        }

+ Response 502 (application/json)

         {
        "message": "Internal error has occured. Please, try again"
        }
## Sign Up confirm [PATCH]
Confirms user, after confirm user is automatically signed in.
Header "Authorization" has to be filled in with OAuth access (value of "access" field from signup response), e.g. Authorization: OAuth 450dSdsdk48578593003203:

*code - code from SMS, e.g. 654321

*mock - 1 for mock, 0 for server request. Mock always responses with 202

*message - information message for UI

+ Request  (application/json) 

    + Headers
    
            Authorization: OAuth 450dSdsdk48578593003203
            
    + Body 

            {
            "code": 654321,
            "mock": 0
            }
            
+ Response 201 (application/json)

        {
        "message": "Phone confirmed. You can start using the application"
        }
+ Response 401 (application/json)

         {
        "message": "Not authorized"
        }
+ Response 400 (application/json)

         {
        "message": "Incorrect code. Please, try again or resend code"
        }
+ Response 422 (application/json)

         {
        "message": "Code has expired. Please, resend code"
        }
+ Response 502 (application/json)

         [{
        "message": "Internal error has occured. Please, try again"
        }

# Authorization [/api/signin]
## Sign In [POST]

Signin user:
Header "Authorization" has to be filled in with OAuth access (value of "access" field from signup response), e.g. Authorization: OAuth 450dSdsdk48578593003203

*phone - mobile phone number in format of +Country_codeMobile operator codePhone, e.g. 79165910525

*access - has to be sent in headers in all further requests

*mock - 1 for mock, 0 for server request. Mock always responses with 202

*message - information message for UI
+ Request  (application/json)

        {
        "phone": 79160000000,
        "mock": 0
        }
        
+ Response 202 (application/json)

        {
        "access": "450dSdsdk48578593003203"
        "message": "Please fill in code from SMS we sent"
        }
+ Response 400 (application/json)

         {
        "message": "Incorrect phone format. Please, try again"
        }
+ Response 401 (application/json)

         [{
        "message": "Incorrect phone. Please try other ones or sign up"
        }
+ Response 502 (application/json)

         [{
        "message": "Internal error has occured. Please, try again"
        }
## Sign In resend [PUT]
Reseneds SMS code to the phone number by access token
Header "Authorization" has to be filled in with OAuth access (value of "access" field from signup response), e.g. Authorization: OAuth 450dSdsdk48578593003203:

*Code - code from SMS

*message - information message for UI
+ Request  (application/json) 

    + Headers
    
            Authorization: OAuth 450dSdsdk48578593003203
            
    + Body
    
            {      
             "mock": 0
            }
            
+ Response 202 (application/json)

        {
        "message": "Phone code resent"
        }
+ Response 401 (application/json)

         {
        "message": "Not authorized"
        }
+ Response 400 (application/json)

         {
        "message": "Code is requested too earlier. Timeout to resend 00:59 sec"
        }

+ Response 502 (application/json)

         {
        "message": "Internal error has occured. Please, try again"
        }
## Sign In confirm [PATCH]
Confirms user, after confirm user is automatically Signed in.
Header "Authorization" has to be filled in with OAuth access (value of "access" field from signup response), e.g. Authorization: OAuth 450dSdsdk48578593003203:

*code - code from SMS

*mock - 1 for mock, 0 for server request. Mock always responses with 202

*message - information message for UI
+ Request  (application/json) 

    + Headers
    
            Authorization: OAuth 450dSdsdk48578593003203
            
    + Body
    
            {
            "code": 654321,
            "mock": 0
            }
            
+ Response 201 (application/json)
+ Response 401 (application/json)

        {
        "message": "Not authorized"
        }
+ Response 400 (application/json)

         {
        "message": "Incorrect code. Please, try again or resend code"
        }
+ Response 422 (application/json)

         {
        "message": "Code has expired. Please, resend code"
        }
+ Response 502 (application/json)

         [{
        "message": "Internal error has occured. Please, try again"
        }
## Sign Out [DELETE]
Sign outs user. It also calls "Switch" method with "Off" value in "Switch" field to avoid working decanter too much time without any provided actions to server.
Authomatic sign out without any actions is done after 45 mins (with Switchin on for sure).
Header "Authorization" has to be filled in with OAuth access (value of "access" field from signup response), e.g. Authorization: OAuth 450dSdsdk48578593003203:

*code - code from SMS

*mock - 1 for mock, 0 for server request. Mock always responses with 202

*message - information message for UI
+ Request  (application/json) 

    + Headers
    
            Authorization: OAuth 450dSdsdk48578593003203
            
    + Body
    
            {
            "code": 654321,
            "mock": 0
            }
            
+ Response 201 (application/json)
+ Response 401 (application/json)

        {
        "message": "Not authorized"
        }
+ Response 400 (application/json)

         {
        "message": "Incorrect code. Please, try again or resend code"
        }
+ Response 422 (application/json)

         {
        "message": "Code has expired. Please, resend code"
        }
+ Response 502 (application/json)

         [{
        "message": "Internal error has occured. Please, try again"
        }

# Status [/api/status]
## Get status [GET]

Get status of decanter
Header "Authorization" has to be filled in with OAuth access (value of "access" field from signup response), e.g. Authorization: OAuth 450dSdsdk48578593003203

*mock - 1 for mock, 0 for server request. Mock always responses with 202 and mock data

*volume - current volume of liquid in decanter in litres

*alcohol - alcohol in liquid, in %

*sugar - sugar in liquid, gr/100ml

*tempreture - tempreture in degrees, C. Couldn't be less then 5 dergrees upper then "0" and upper more than "45"

*Type - wine type: red, white, ping, orange

*TypeTrueCofficient - cofficient of Type relevancy

*Switched - On/Off. Shows id decanter is switched On or switched Off. In case of switching off, other fields are not sent by server, cause decanter
is not analyzing its filling


+ Request  (application/json) 

    + Headers
    
            Authorization: OAuth 450dSdsdk48578593003203
            
    + Body
    
            {
            "mock": 0
            }
     
+ Response 202 (application/json)

        {
        "volume": 0.7,
        "alcohol": 12.3,
        "sugar": 5,
        "tempreture": 18,
        "type": "white",
        "TypeTrueCofficient": 78,
        "Switched": "On"
        }
        
+ Response 400 (application/json)

        {
        "message": "Bad request"
        }

+ Response 401 (application/json)

        {
        "message": "Not authorized"
        }
+ Response 502 (application/json)

         [{
        "message": "Internal error has occured. Please, try again"
        }

# Switch [/api/switch]
## Switch [POST]
Switches On or Switches off decanter
Header "Authorization" has to be filled in with OAuth access (value of "access" field from signup response), e.g. Authorization: OAuth 450dSdsdk48578593003203:

SwitchType: On/Off. Switches On or Switches Off. D

+ Request  (application/json) 

    + Headers
    
            Authorization: OAuth 450dSdsdk48578593003203
            
    + Body
    
            {
            "Switch": "On"
            "mock": 0
            }
     
+ Response 202 (application/json)

        {
        "message": "Switched On"
        }
        
+ Response 400 (application/json)

        {
        "message": "Already Switched On"
        }
+ Response 400 (application/json)

        {
        "message": "Already Switched Off"
        }

+ Response 401 (application/json)

        {
        "message": "Not authorized"
        }
+ Response 502 (application/json)

         [{
        "message": "Internal error has occured. Please, try again"
        }

# Change tempreture [/api/tempreture]
## Change tempreture [POST]

Request to change the tempreture of liquid inside decanter. Cause the tempreture could not changed at the moment, async callback is realized basin on requestId
Header "Authorization" has to be filled in with OAuth access (value of "access" field from signup response), e.g. Authorization: OAuth 450dSdsdk48578593003203.
changeOn or changeTo is mandatory (on of pair)

*mock - 1 for mock, 0 for server request. Mock always responses with 202 and mock data

*changeType - cool/heat, mandatory if changeOn is filled in, skipped on server side if changeTo is filled in

*changeOn - how much dergees up or down, step is 1 degree

*changeTo - to what tempreture is to set. Between 5 and 45

*requestId - requestId, generated by server for async callback when the result if archieved or error occured


+ Request  (application/json) 

    + Headers
    
            Authorization: OAuth 450dSdsdk48578593003203
            
    + Body
    
            {
            "changeType": "cool"
            "changeOn": 35
            "changeTo": 45
            "mock": 0
            }
     
+ Response 202 (application/json)

        {
        "requestId": 1
        }
        
+ Response 400 (application/json)

        {
        "message": "Max temreture is reached. Heating is impossible"
        }

+ Response 401 (application/json)

        {
        "message": "Not authorized"
        }
+ Response 502 (application/json)

         [{
        "message": "Internal error has occured. Please, try again"
        }
        


# Shake decanter [/api/shake]